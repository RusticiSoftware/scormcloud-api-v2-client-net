/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// XapiCredentialPutSchema
    /// </summary>
    [DataContract]
    public partial class XapiCredentialPutSchema :  IEquatable<XapiCredentialPutSchema>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XapiCredentialPutSchema" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Name">Name.</param>
        /// <param name="Info">Info.</param>
        /// <param name="Secret">Secret.</param>
        /// <param name="IsEnabled">IsEnabled.</param>
        /// <param name="Auth">Auth.</param>
        /// <param name="PermissionsLevel">PermissionsLevel.</param>
        public XapiCredentialPutSchema(string Id = default(string), string Name = default(string), string Info = default(string), string Secret = default(string), bool? IsEnabled = default(bool?), XapiCredentialAuthTypeSchema Auth = default(XapiCredentialAuthTypeSchema), XapiCredentialPermissionsLevelSchema PermissionsLevel = default(XapiCredentialPermissionsLevelSchema))
        {
            this.Id = Id;
            this.Name = Name;
            this.Info = Info;
            this.Secret = Secret;
            this.IsEnabled = IsEnabled;
            this.Auth = Auth;
            this.PermissionsLevel = PermissionsLevel;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }
        /// <summary>
        /// Gets or Sets Info
        /// </summary>
        [DataMember(Name="info", EmitDefaultValue=false)]
        public string Info { get; set; }
        /// <summary>
        /// Gets or Sets Secret
        /// </summary>
        [DataMember(Name="secret", EmitDefaultValue=false)]
        public string Secret { get; set; }
        /// <summary>
        /// Gets or Sets IsEnabled
        /// </summary>
        [DataMember(Name="isEnabled", EmitDefaultValue=false)]
        public bool? IsEnabled { get; set; }
        /// <summary>
        /// Gets or Sets Auth
        /// </summary>
        [DataMember(Name="auth", EmitDefaultValue=false)]
        public XapiCredentialAuthTypeSchema Auth { get; set; }
        /// <summary>
        /// Gets or Sets PermissionsLevel
        /// </summary>
        [DataMember(Name="permissionsLevel", EmitDefaultValue=false)]
        public XapiCredentialPermissionsLevelSchema PermissionsLevel { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XapiCredentialPutSchema {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Info: ").Append(Info).Append("\n");
            sb.Append("  Secret: ").Append(Secret).Append("\n");
            sb.Append("  IsEnabled: ").Append(IsEnabled).Append("\n");
            sb.Append("  Auth: ").Append(Auth).Append("\n");
            sb.Append("  PermissionsLevel: ").Append(PermissionsLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as XapiCredentialPutSchema);
        }

        /// <summary>
        /// Returns true if XapiCredentialPutSchema instances are equal
        /// </summary>
        /// <param name="other">Instance of XapiCredentialPutSchema to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XapiCredentialPutSchema other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.Info == other.Info ||
                    this.Info != null &&
                    this.Info.Equals(other.Info)
                ) && 
                (
                    this.Secret == other.Secret ||
                    this.Secret != null &&
                    this.Secret.Equals(other.Secret)
                ) && 
                (
                    this.IsEnabled == other.IsEnabled ||
                    this.IsEnabled != null &&
                    this.IsEnabled.Equals(other.IsEnabled)
                ) && 
                (
                    this.Auth == other.Auth ||
                    this.Auth != null &&
                    this.Auth.Equals(other.Auth)
                ) && 
                (
                    this.PermissionsLevel == other.PermissionsLevel ||
                    this.PermissionsLevel != null &&
                    this.PermissionsLevel.Equals(other.PermissionsLevel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                if (this.Info != null)
                    hash = hash * 59 + this.Info.GetHashCode();
                if (this.Secret != null)
                    hash = hash * 59 + this.Secret.GetHashCode();
                if (this.IsEnabled != null)
                    hash = hash * 59 + this.IsEnabled.GetHashCode();
                if (this.Auth != null)
                    hash = hash * 59 + this.Auth.GetHashCode();
                if (this.PermissionsLevel != null)
                    hash = hash * 59 + this.PermissionsLevel.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
