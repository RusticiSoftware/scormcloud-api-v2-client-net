/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Com.RusticiSoftware.Cloud.V2.Client.SwaggerDateConverter;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// Request to import a new course. Exactly one of fetchRequest or mediaFileReferenceRequest must be supplied, depending on the desired import behavior. 
    /// </summary>
    [DataContract]
    public partial class ImportRequestSchema :  IEquatable<ImportRequestSchema>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ImportRequestSchema" /> class.
        /// </summary>
        /// <param name="fetchRequest">fetchRequest.</param>
        /// <param name="mediaFileReferenceRequest">mediaFileReferenceRequest.</param>
        public ImportRequestSchema(ImportFetchRequestSchema fetchRequest = default(ImportFetchRequestSchema), ImportMediaFileReferenceRequestSchema mediaFileReferenceRequest = default(ImportMediaFileReferenceRequestSchema))
        {
            this.FetchRequest = fetchRequest;
            this.MediaFileReferenceRequest = mediaFileReferenceRequest;
        }
        
        /// <summary>
        /// Gets or Sets FetchRequest
        /// </summary>
        [DataMember(Name="fetchRequest", EmitDefaultValue=false)]
        public ImportFetchRequestSchema FetchRequest { get; set; }

        /// <summary>
        /// Gets or Sets MediaFileReferenceRequest
        /// </summary>
        [DataMember(Name="mediaFileReferenceRequest", EmitDefaultValue=false)]
        public ImportMediaFileReferenceRequestSchema MediaFileReferenceRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ImportRequestSchema {\n");
            sb.Append("  FetchRequest: ").Append(FetchRequest).Append("\n");
            sb.Append("  MediaFileReferenceRequest: ").Append(MediaFileReferenceRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ImportRequestSchema);
        }

        /// <summary>
        /// Returns true if ImportRequestSchema instances are equal
        /// </summary>
        /// <param name="input">Instance of ImportRequestSchema to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ImportRequestSchema input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FetchRequest == input.FetchRequest ||
                    (this.FetchRequest != null &&
                    this.FetchRequest.Equals(input.FetchRequest))
                ) && 
                (
                    this.MediaFileReferenceRequest == input.MediaFileReferenceRequest ||
                    (this.MediaFileReferenceRequest != null &&
                    this.MediaFileReferenceRequest.Equals(input.MediaFileReferenceRequest))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FetchRequest != null)
                    hashCode = hashCode * 59 + this.FetchRequest.GetHashCode();
                if (this.MediaFileReferenceRequest != null)
                    hashCode = hashCode * 59 + this.MediaFileReferenceRequest.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
