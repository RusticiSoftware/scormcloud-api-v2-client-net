/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Com.RusticiSoftware.Cloud.V2.Client.SwaggerDateConverter;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// LaunchAuthOptionsSchema
    /// </summary>
    [DataContract]
    public partial class LaunchAuthOptionsSchema :  IEquatable<LaunchAuthOptionsSchema>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchAuthOptionsSchema" /> class.
        /// </summary>
        /// <param name="ipAddress">ipAddress.</param>
        /// <param name="fingerprint">fingerprint.</param>
        /// <param name="expiry">expiry.</param>
        /// <param name="slidingExpiry">slidingExpiry.</param>
        public LaunchAuthOptionsSchema(bool? ipAddress = default(bool?), bool? fingerprint = default(bool?), int? expiry = default(int?), int? slidingExpiry = default(int?))
        {
            this.IpAddress = ipAddress;
            this.Fingerprint = fingerprint;
            this.Expiry = expiry;
            this.SlidingExpiry = slidingExpiry;
        }
        
        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name="ipAddress", EmitDefaultValue=false)]
        public bool? IpAddress { get; set; }

        /// <summary>
        /// Gets or Sets Fingerprint
        /// </summary>
        [DataMember(Name="fingerprint", EmitDefaultValue=false)]
        public bool? Fingerprint { get; set; }

        /// <summary>
        /// Gets or Sets Expiry
        /// </summary>
        [DataMember(Name="expiry", EmitDefaultValue=false)]
        public int? Expiry { get; set; }

        /// <summary>
        /// Gets or Sets SlidingExpiry
        /// </summary>
        [DataMember(Name="slidingExpiry", EmitDefaultValue=false)]
        public int? SlidingExpiry { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LaunchAuthOptionsSchema {\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  Fingerprint: ").Append(Fingerprint).Append("\n");
            sb.Append("  Expiry: ").Append(Expiry).Append("\n");
            sb.Append("  SlidingExpiry: ").Append(SlidingExpiry).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LaunchAuthOptionsSchema);
        }

        /// <summary>
        /// Returns true if LaunchAuthOptionsSchema instances are equal
        /// </summary>
        /// <param name="input">Instance of LaunchAuthOptionsSchema to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LaunchAuthOptionsSchema input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IpAddress == input.IpAddress ||
                    (this.IpAddress != null &&
                    this.IpAddress.Equals(input.IpAddress))
                ) && 
                (
                    this.Fingerprint == input.Fingerprint ||
                    (this.Fingerprint != null &&
                    this.Fingerprint.Equals(input.Fingerprint))
                ) && 
                (
                    this.Expiry == input.Expiry ||
                    (this.Expiry != null &&
                    this.Expiry.Equals(input.Expiry))
                ) && 
                (
                    this.SlidingExpiry == input.SlidingExpiry ||
                    (this.SlidingExpiry != null &&
                    this.SlidingExpiry.Equals(input.SlidingExpiry))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IpAddress != null)
                    hashCode = hashCode * 59 + this.IpAddress.GetHashCode();
                if (this.Fingerprint != null)
                    hashCode = hashCode * 59 + this.Fingerprint.GetHashCode();
                if (this.Expiry != null)
                    hashCode = hashCode * 59 + this.Expiry.GetHashCode();
                if (this.SlidingExpiry != null)
                    hashCode = hashCode * 59 + this.SlidingExpiry.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
