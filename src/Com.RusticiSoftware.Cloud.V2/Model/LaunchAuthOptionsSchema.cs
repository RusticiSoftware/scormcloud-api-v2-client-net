/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// LaunchAuthOptionsSchema
    /// </summary>
    [DataContract]
    public partial class LaunchAuthOptionsSchema :  IEquatable<LaunchAuthOptionsSchema>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LaunchAuthOptionsSchema" /> class.
        /// </summary>
        /// <param name="IpAddress">IpAddress.</param>
        /// <param name="Fingerprint">Fingerprint.</param>
        /// <param name="Expiry">Expiry.</param>
        /// <param name="SlidingExpiry">SlidingExpiry.</param>
        public LaunchAuthOptionsSchema(bool? IpAddress = default(bool?), bool? Fingerprint = default(bool?), int? Expiry = default(int?), int? SlidingExpiry = default(int?))
        {
            this.IpAddress = IpAddress;
            this.Fingerprint = Fingerprint;
            this.Expiry = Expiry;
            this.SlidingExpiry = SlidingExpiry;
        }
        
        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name="ipAddress", EmitDefaultValue=false)]
        public bool? IpAddress { get; set; }
        /// <summary>
        /// Gets or Sets Fingerprint
        /// </summary>
        [DataMember(Name="fingerprint", EmitDefaultValue=false)]
        public bool? Fingerprint { get; set; }
        /// <summary>
        /// Gets or Sets Expiry
        /// </summary>
        [DataMember(Name="expiry", EmitDefaultValue=false)]
        public int? Expiry { get; set; }
        /// <summary>
        /// Gets or Sets SlidingExpiry
        /// </summary>
        [DataMember(Name="slidingExpiry", EmitDefaultValue=false)]
        public int? SlidingExpiry { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LaunchAuthOptionsSchema {\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  Fingerprint: ").Append(Fingerprint).Append("\n");
            sb.Append("  Expiry: ").Append(Expiry).Append("\n");
            sb.Append("  SlidingExpiry: ").Append(SlidingExpiry).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as LaunchAuthOptionsSchema);
        }

        /// <summary>
        /// Returns true if LaunchAuthOptionsSchema instances are equal
        /// </summary>
        /// <param name="other">Instance of LaunchAuthOptionsSchema to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LaunchAuthOptionsSchema other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.IpAddress == other.IpAddress ||
                    this.IpAddress != null &&
                    this.IpAddress.Equals(other.IpAddress)
                ) && 
                (
                    this.Fingerprint == other.Fingerprint ||
                    this.Fingerprint != null &&
                    this.Fingerprint.Equals(other.Fingerprint)
                ) && 
                (
                    this.Expiry == other.Expiry ||
                    this.Expiry != null &&
                    this.Expiry.Equals(other.Expiry)
                ) && 
                (
                    this.SlidingExpiry == other.SlidingExpiry ||
                    this.SlidingExpiry != null &&
                    this.SlidingExpiry.Equals(other.SlidingExpiry)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.IpAddress != null)
                    hash = hash * 59 + this.IpAddress.GetHashCode();
                if (this.Fingerprint != null)
                    hash = hash * 59 + this.Fingerprint.GetHashCode();
                if (this.Expiry != null)
                    hash = hash * 59 + this.Expiry.GetHashCode();
                if (this.SlidingExpiry != null)
                    hash = hash * 59 + this.SlidingExpiry.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
