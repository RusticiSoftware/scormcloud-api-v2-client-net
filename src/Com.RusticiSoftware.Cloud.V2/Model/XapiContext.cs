/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// https://github.com/adlnet/xAPI-Spec/blob/1.0.2/xAPI.md#416-context
    /// </summary>
    [DataContract]
    public partial class XapiContext :  IEquatable<XapiContext>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XapiContext" /> class.
        /// </summary>
        /// <param name="Registration">Registration.</param>
        /// <param name="Instructor">Instructor.</param>
        /// <param name="Team">Team.</param>
        /// <param name="ContextActivities">ContextActivities.</param>
        /// <param name="Revision">Revision.</param>
        /// <param name="Platform">Platform.</param>
        /// <param name="Language">Language.</param>
        /// <param name="Statement">Statement.</param>
        /// <param name="Extensions">Extensions.</param>
        public XapiContext(string Registration = default(string), XapiAgentGroup Instructor = default(XapiAgentGroup), XapiAgentGroup Team = default(XapiAgentGroup), XapiContextActivity ContextActivities = default(XapiContextActivity), string Revision = default(string), string Platform = default(string), string Language = default(string), XapiStatementReference Statement = default(XapiStatementReference), Dictionary<string, Object> Extensions = default(Dictionary<string, Object>))
        {
            this.Registration = Registration;
            this.Instructor = Instructor;
            this.Team = Team;
            this.ContextActivities = ContextActivities;
            this.Revision = Revision;
            this.Platform = Platform;
            this.Language = Language;
            this.Statement = Statement;
            this.Extensions = Extensions;
        }
        
        /// <summary>
        /// Gets or Sets Registration
        /// </summary>
        [DataMember(Name="registration", EmitDefaultValue=false)]
        public string Registration { get; set; }
        /// <summary>
        /// Gets or Sets Instructor
        /// </summary>
        [DataMember(Name="instructor", EmitDefaultValue=false)]
        public XapiAgentGroup Instructor { get; set; }
        /// <summary>
        /// Gets or Sets Team
        /// </summary>
        [DataMember(Name="team", EmitDefaultValue=false)]
        public XapiAgentGroup Team { get; set; }
        /// <summary>
        /// Gets or Sets ContextActivities
        /// </summary>
        [DataMember(Name="contextActivities", EmitDefaultValue=false)]
        public XapiContextActivity ContextActivities { get; set; }
        /// <summary>
        /// Gets or Sets Revision
        /// </summary>
        [DataMember(Name="revision", EmitDefaultValue=false)]
        public string Revision { get; set; }
        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name="platform", EmitDefaultValue=false)]
        public string Platform { get; set; }
        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public string Language { get; set; }
        /// <summary>
        /// Gets or Sets Statement
        /// </summary>
        [DataMember(Name="statement", EmitDefaultValue=false)]
        public XapiStatementReference Statement { get; set; }
        /// <summary>
        /// Gets or Sets Extensions
        /// </summary>
        [DataMember(Name="extensions", EmitDefaultValue=false)]
        public Dictionary<string, Object> Extensions { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XapiContext {\n");
            sb.Append("  Registration: ").Append(Registration).Append("\n");
            sb.Append("  Instructor: ").Append(Instructor).Append("\n");
            sb.Append("  Team: ").Append(Team).Append("\n");
            sb.Append("  ContextActivities: ").Append(ContextActivities).Append("\n");
            sb.Append("  Revision: ").Append(Revision).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Statement: ").Append(Statement).Append("\n");
            sb.Append("  Extensions: ").Append(Extensions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as XapiContext);
        }

        /// <summary>
        /// Returns true if XapiContext instances are equal
        /// </summary>
        /// <param name="other">Instance of XapiContext to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XapiContext other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Registration == other.Registration ||
                    this.Registration != null &&
                    this.Registration.Equals(other.Registration)
                ) && 
                (
                    this.Instructor == other.Instructor ||
                    this.Instructor != null &&
                    this.Instructor.Equals(other.Instructor)
                ) && 
                (
                    this.Team == other.Team ||
                    this.Team != null &&
                    this.Team.Equals(other.Team)
                ) && 
                (
                    this.ContextActivities == other.ContextActivities ||
                    this.ContextActivities != null &&
                    this.ContextActivities.Equals(other.ContextActivities)
                ) && 
                (
                    this.Revision == other.Revision ||
                    this.Revision != null &&
                    this.Revision.Equals(other.Revision)
                ) && 
                (
                    this.Platform == other.Platform ||
                    this.Platform != null &&
                    this.Platform.Equals(other.Platform)
                ) && 
                (
                    this.Language == other.Language ||
                    this.Language != null &&
                    this.Language.Equals(other.Language)
                ) && 
                (
                    this.Statement == other.Statement ||
                    this.Statement != null &&
                    this.Statement.Equals(other.Statement)
                ) && 
                (
                    this.Extensions == other.Extensions ||
                    this.Extensions != null &&
                    this.Extensions.SequenceEqual(other.Extensions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Registration != null)
                    hash = hash * 59 + this.Registration.GetHashCode();
                if (this.Instructor != null)
                    hash = hash * 59 + this.Instructor.GetHashCode();
                if (this.Team != null)
                    hash = hash * 59 + this.Team.GetHashCode();
                if (this.ContextActivities != null)
                    hash = hash * 59 + this.ContextActivities.GetHashCode();
                if (this.Revision != null)
                    hash = hash * 59 + this.Revision.GetHashCode();
                if (this.Platform != null)
                    hash = hash * 59 + this.Platform.GetHashCode();
                if (this.Language != null)
                    hash = hash * 59 + this.Language.GetHashCode();
                if (this.Statement != null)
                    hash = hash * 59 + this.Statement.GetHashCode();
                if (this.Extensions != null)
                    hash = hash * 59 + this.Extensions.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
