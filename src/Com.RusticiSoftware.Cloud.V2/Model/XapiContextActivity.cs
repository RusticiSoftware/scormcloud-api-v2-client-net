/* 
 * SCORM Cloud Rest API
 *
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0 beta
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Com.RusticiSoftware.Cloud.V2.Model
{
    /// <summary>
    /// https://github.com/adlnet/xAPI-Spec/blob/1.0.2/xAPI.md#4162-contextactivities-property
    /// </summary>
    [DataContract]
    public partial class XapiContextActivity :  IEquatable<XapiContextActivity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XapiContextActivity" /> class.
        /// </summary>
        /// <param name="Parent">Parent.</param>
        /// <param name="Grouping">Grouping.</param>
        /// <param name="Category">Category.</param>
        /// <param name="Other">Other.</param>
        public XapiContextActivity(List<XapiActivity> Parent = default(List<XapiActivity>), List<XapiActivity> Grouping = default(List<XapiActivity>), List<XapiActivity> Category = default(List<XapiActivity>), List<XapiActivity> Other = default(List<XapiActivity>))
        {
            this.Parent = Parent;
            this.Grouping = Grouping;
            this.Category = Category;
            this.Other = Other;
        }
        
        /// <summary>
        /// Gets or Sets Parent
        /// </summary>
        [DataMember(Name="parent", EmitDefaultValue=false)]
        public List<XapiActivity> Parent { get; set; }
        /// <summary>
        /// Gets or Sets Grouping
        /// </summary>
        [DataMember(Name="grouping", EmitDefaultValue=false)]
        public List<XapiActivity> Grouping { get; set; }
        /// <summary>
        /// Gets or Sets Category
        /// </summary>
        [DataMember(Name="category", EmitDefaultValue=false)]
        public List<XapiActivity> Category { get; set; }
        /// <summary>
        /// Gets or Sets Other
        /// </summary>
        [DataMember(Name="other", EmitDefaultValue=false)]
        public List<XapiActivity> Other { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XapiContextActivity {\n");
            sb.Append("  Parent: ").Append(Parent).Append("\n");
            sb.Append("  Grouping: ").Append(Grouping).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  Other: ").Append(Other).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as XapiContextActivity);
        }

        /// <summary>
        /// Returns true if XapiContextActivity instances are equal
        /// </summary>
        /// <param name="other">Instance of XapiContextActivity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XapiContextActivity other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Parent == other.Parent ||
                    this.Parent != null &&
                    this.Parent.SequenceEqual(other.Parent)
                ) && 
                (
                    this.Grouping == other.Grouping ||
                    this.Grouping != null &&
                    this.Grouping.SequenceEqual(other.Grouping)
                ) && 
                (
                    this.Category == other.Category ||
                    this.Category != null &&
                    this.Category.SequenceEqual(other.Category)
                ) && 
                (
                    this.Other == other.Other ||
                    this.Other != null &&
                    this.Other.SequenceEqual(other.Other)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Parent != null)
                    hash = hash * 59 + this.Parent.GetHashCode();
                if (this.Grouping != null)
                    hash = hash * 59 + this.Grouping.GetHashCode();
                if (this.Category != null)
                    hash = hash * 59 + this.Category.GetHashCode();
                if (this.Other != null)
                    hash = hash * 59 + this.Other.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
